#!/usr/bin/env python3

import jinja2, yaml

class Person:
  def __init__(self, name, *, age, job, pets, allergies=()):
    self.name      = name
    self.age       = age
    self.job       = job
    self.allergies = allergies
    self.pets      = [Pet(name, **pets[name]) for name in pets]

class Pet:
  def __init__(self, name, *, species, age, likes, dislikes):
    self.name     = name
    self.age      = age
    self.likes    = likes
    self.dislikes = dislikes
    self.species  = species

class Fruit:
  def __init__(self, name, *, weight, calories):
    self.name     = name
    self.weight   = weight
    self.calories = calories

class Context:
  def __init__(self, people, fruits):
    self.people = [Person(name, **people[name]) for name in people]
    self.fruits = [Fruit(name, **fruits[name]) for name in fruits]
  def __iter__(self):
    return self.__dict__.items().__iter__()

# load the config file
with open('config.yaml', 'r') as f:
  config = yaml.load(f.read())

context = Context(**config)

environment = jinja2.Environment(
  lstrip_blocks=True,
  trim_blocks=True,
  undefined=jinja2.StrictUndefined,
)

# load the template
with open('template.md', 'r') as f:
  template = environment.from_string(f.read())

output = template.render(context)

with open('output.md', 'w') as f:
  f.write(output)
